
```{r}
suppressPackageStartupMessages({
    library(lubridate)
    library(tidyverse)
    library(reshape2)
    library(here)
    library(patchwork)
})

theme_set(theme_minimal())

#### Age Groups
all_hosp_age <- read_csv(here("data/raw/all_hosp_age.csv"))  %>%
    select(-location)

delayed_cases_age <- read_csv(here("data/raw/delayed_cases_age.csv")) %>%
    mutate(age_group = str_replace_all(age_group, "A", "")) %>%
    filter(age_group != "unbekannt") %>%
    # cases have one day less than hospitalizations
    # this is because the hospitalizations associated with today
    # come from the PAST 7 days, i.e.
    # hospitalization incidence at T is the sum of days T-1, ..., T - 7
    # thus 7-day incidence of the day BEFORE T has to be chosen here
    # To deal with this, we shift the `county_date` variable by one day
    # before calculating the daily incidence
    mutate(county_date = county_date + 1)

# fix +-1 data errors by substracting them from the
# first reported value (within the grouping factor)
# this is obviously not perfect, but most of the time
# we are only dealing with < 10 corrections within each group
positive_increments <- function(inc) {
    c(inc[1] + sum(inc[inc < 0]), pmax(inc[-1], 0))
}
reporting_triangle <- function(delay_df, report_date, past_date, add_rollsum, ...) {
    group_vars <- enquos(...)

    report_date <- enquo(report_date)
    past_date <- enquo(past_date)

    if (add_rollsum) {
        delay_df <- delay_df %>%
            arrange(!!report_date, !!past_date, !!!group_vars) %>%
            group_by(!!report_date, !!!group_vars) %>%
            arrange(!!past_date) %>%
            mutate(value = zoo::rollsum(value, k = 7, align = "right", na.pad = T)) %>%
            ungroup() 

    }

    delay_df %>%
        mutate(delay = as.numeric(!!report_date - !!past_date)) %>%
        group_by(!!past_date, !!!group_vars) %>%
        arrange(delay) %>%
        mutate(increment = diff(c(0, value))) %>%
        # remove negative values - these are probably reporting artifacts
        mutate(increment = pmax(increment, 0)) %>%
        select(!!past_date, delay, !!!group_vars, increment) %>%
        ungroup()
}

max_weeks <- 3 * 12
min_date <- ymd("2021-05-01")
tri_hosp <- all_hosp_age %>%
    mutate(delay = as.numeric(hosp_date - case_date)) %>%
    group_by(case_date, age_group) %>%
    arrange(delay) %>%
    mutate(increment = diff(c(0, value))) %>%
    mutate(increment = positive_increments(increment)) %>%
    filter(delay < max_weeks * 7, case_date >= min_date)
```


```{r}
tri_case <- delayed_cases_age %>%
    select(rki_date, county_date, age_group, value = cases) %>%
    reporting_triangle(rki_date, county_date, add_rollsum = T, age_group) %>%
    filter(delay < max_weeks * 7, county_date >= min_date) 
```

## Figure compare tri_hosp / tri_case
```{r}
p_hosp <- tri_hosp %>%
    group_by(age_group, delay) %>%
    summarize(increment = sum(increment))%>%
    filter(delay <= 200) %>%
    mutate(pct_increment = increment / sum(increment) * 100) %>%
    ggplot(aes(delay, pct_increment, color = age_group)) +
    geom_line() +
    #facet_wrap(~age_group, nrow = 6) +
    scale_y_log10()

p_case <- tri_case %>%
    group_by(age_group, delay) %>%
    summarize(increment = sum(increment))%>%
    filter(delay <= 200) %>%
    mutate(pct_increment = increment / sum(increment) * 100) %>%
    ggplot(aes(delay, pct_increment, color = age_group)) +
    geom_line() +
    scale_y_log10()

p_hosp | p_case
```


## `data/processed/tri_hosp.csv`

```{r}
write_csv(
    tri_hosp,
    here("data/processed/tri_hosp.csv")
)
```

## `data/processed/tri_case.csv`

```{r}
write_csv(
    tri_case,
    here("data/processed/tri_case.csv")
)
```